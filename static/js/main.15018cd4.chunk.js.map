{"version":3,"sources":["features/firebase/firebase.ts","components/BudgetForm.tsx","components/BudgetSummary.tsx","components/BudgetSelections.tsx","common/index.ts","components/EasterEgg.tsx","components/BudgetSubmitted.tsx","components/BudgetCalculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","app","initializeApp","db","getFirestore","this","items","type","name","lowPrice","highPrice","a","itemsCol","collection","getDocs","itemsSnapshot","itemsList","docs","map","doc","data","filter","item","index","self","findIndex","i","budgetSubmission","id","Date","valueOf","toString","setDoc","budgetsCol","budgetsSnapshot","budgets","Promise","resolve","reject","setTimeout","undefined","firebase","BudgetForm","props","CardHeader","title","CardContent","Typography","variant","color","OutlinedInput","sx","marginTop","size","value","budget","startAdornment","InputAdornment","position","onChange","handleBudget","BudgetSummary","low","selections","reduce","prev","curr","high","parseInt","status","Grid","container","textAlign","paddingTop","xs","grey","toLocaleString","BudgetSelections","types","Set","list","forEach","length","List","subheader","Object","keys","style","padding","ListSubheader","s","split","join","replace","txt","charAt","substr","toLowerCase","j","ListItem","divider","ListItemButton","disabled","role","onClick","itemSelected","dense","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","primary","secondary","EasterEgg","useState","setCode","open","setOpen","useEffect","konamiCode","handleKeydown","e","current","key","newCode","concat","document","addEventListener","removeEventListener","Dialog","onClickCapture","allow","frameBorder","height","src","width","BudgetSubmitted","BudgetCalculator","theme","useTheme","activeStep","form","state","setState","getItems","event","target","selection","disabledTypes","includes","handleSubmit","submission","submitBudget","catch","err","console","error","Card","margin","border","elevation","renderFormStep","MobileStepper","bgcolor","maxWidth","steps","nextButton","Button","direction","KeyboardArrowLeft","KeyboardArrowRight","backButton","App","Container","justifyContent","alignItems","paddingBottom","Boolean","window","location","hostname","match","createTheme","palette","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.15018cd4.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore, collection, doc, setDoc, getDocs } from 'firebase/firestore/lite';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD7NUVfrImccSo8FuCBG7bXVk0oLFqgE-k\",\n    authDomain: \"yardzen-demo.firebaseapp.com\",\n    databaseURL: \"https://yardzen-demo.firebaseio.com\",\n    projectId: \"yardzen-demo\",\n    storageBucket: \"yardzen-demo.appspot.com\",\n    messagingSenderId: \"509183652730\",\n    appId: \"1:509183652730:web:ba2208f7d8e0882f009cc3\"\n};\n\nexport interface Item {\n    type: string;\n    highPrice: number;\n    lowPrice: number;\n    name: string;\n}\n\nexport interface BudgetSubmission {\n    budget: string;\n    items: Item[];\n}\n\nexport class Firebase {\n    app = initializeApp(firebaseConfig);\n    db = getFirestore(this.app)\n\n    async getItems(): Promise<Item[]> {\n        const itemsCol = collection(this.db, 'items');\n        const itemsSnapshot = await getDocs(itemsCol);\n        const itemsList = itemsSnapshot.docs.map(doc => doc.data())\n\n        // dedupe (y'all tricky)\n        return itemsList.filter((item, index, self) =>\n            index === self.findIndex(i =>\n                (i.type === item.type && i.name === item.name)\n            )\n        ) as Item[];\n    }\n\n    async submitBudget(budgetSubmission: BudgetSubmission) {\n        const id = new Date().valueOf().toString();\n        await setDoc(doc(this.db, `zacharyBowhayBudgets/${id}`), budgetSubmission);\n    }\n\n    async getBudgets() {\n        const budgetsCol = collection(this.db, 'zacharyBowhayBudgets');\n        const budgetsSnapshot = await getDocs(budgetsCol);\n        const budgets = budgetsSnapshot.docs.map(doc => doc.data())\n\n        return budgets;\n    }\n\n    /**\n     * NOTE: This method is only here, along with the items array below,\n     * so that when this challenge is complete I can revert to \"offline\" mode.\n     *\n     * That way if the firebase collection is ever removed I'll still have data to display.\n     *  */\n    async simulateGetItems() {\n        await new Promise((resolve, reject) => { setTimeout(() => resolve(undefined), 500) });\n        return this.items;\n    }\n\n    items: Item[] = [\n        { type: \"WATER_FEATURES\", name: \"Fountain\", lowPrice: 2000000, highPrice: 6000000 },\n        { type: \"STRUCTURES\", name: \"Taj Mahal\", lowPrice: 200000, highPrice: 600000 },\n        { type: \"LIGHTING\", name: \"16+\", lowPrice: 150000, highPrice: 3000000 },\n        { type: \"WATER_FEATURES\", name: \"Pool\", lowPrice: 6000000, highPrice: 10000000 },\n        { type: \"GROUND_COVER\", name: \"Pavers\", lowPrice: 400000, highPrice: 800000 },\n        { type: \"DECK_MATERIAL\", name: \"Redwood\", lowPrice: 1200000, highPrice: 1400000 },\n        { type: \"FENCING_AND_PRIVACY\", name: \"Bamboo Shroud\", lowPrice: 300000, highPrice: 500000 },\n        { type: \"FENCING_AND_PRIVACY\", name: \"Redwood Fence\", lowPrice: 300000, highPrice: 1000000 },\n        { type: \"DECK_MATERIAL\", name: \"Composite\", lowPrice: 400000, highPrice: 1200000 },\n        { type: \"LIGHTING\", name: \"3-5\", lowPrice: 50000, highPrice: 100000 },\n        { type: \"GROUND_COVER\", name: \"Gravel\", lowPrice: 200000, highPrice: 400000 },\n        { type: \"GROUND_COVER\", name: \"Turf\", lowPrice: 200000, highPrice: 600000 },\n        { type: \"STRUCTURES\", name: \"Pergola\", lowPrice: 1200000, highPrice: 3000000 },\n        { type: \"FENCING_AND_PRIVACY\", name: \"Plywood Fence\", lowPrice: 50000, highPrice: 300000 },\n        { type: \"LIGHTING\", name: \"6-15\", lowPrice: 60000, highPrice: 150000 },\n        { type: \"STRUCTURES\", name: \"Pirate Ship\", lowPrice: 400000, highPrice: 1200000  }\n    ]\n}\n\nconst firebase = new Firebase();\nexport default firebase; // singleton\n","import { CardContent, CardHeader, OutlinedInput, InputAdornment, Typography } from '@mui/material';\n\nfunction BudgetForm(props: { budget: string; handleBudget: any; }) {\n    return (\n        <>\n            <CardHeader title={`Let's Get Started!`}>\n            </CardHeader>\n            <CardContent>\n                <Typography variant=\"subtitle2\" color=\"text.primary\">\n                    What's your budget?\n                </Typography>\n                <OutlinedInput\n                    sx={{ marginTop: 1 }}\n                    size=\"small\"\n                    value={props.budget}\n                    type=\"number\"\n                    startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    onChange={props.handleBudget} />\n            </CardContent>\n        </>\n    );\n}\n\nexport default BudgetForm;","import { Grid, Typography } from '@mui/material';\nimport { grey } from '@mui/material/colors';\nimport { Selection } from './BudgetCalculator';\n\nfunction BudgetSummary(props: {\n    selections: Selection[];\n    budget: string;\n}) {\n    // gather information for summary\n    const low = props.selections.reduce((prev, curr) => prev + curr.lowPrice, 0) / 100;\n    const high = props.selections.reduce((prev, curr) => prev + curr.highPrice, 0) / 100;\n    const budget = parseInt(props.budget) || 0;\n    const status = (budget >= low && budget <= high) ? 'Within Budget' :\n                    budget > high ? 'Under Budget' :\n                    budget < low ? 'Over Budget' : '';\n\n    return (\n        <Grid container sx={{ textAlign: 'center', paddingTop: 2 }}>\n            <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                    Budget\n                </Typography>\n                <Typography variant=\"subtitle2\" color={grey[500]}>\n                    ${budget.toLocaleString()}\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant=\"subtitle1\">\n                    Estimate\n                </Typography>\n                <Typography variant=\"subtitle2\" color={grey[500]}>\n                    {`$${low.toLocaleString()} - $${high.toLocaleString()}`}\n                </Typography>\n            </Grid>\n            <Grid item xs>\n                <Typography variant=\"subtitle1\">\n                    Status\n                </Typography>\n                <Typography variant=\"subtitle2\" color={grey[500]}>\n                    {status}\n                </Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default BudgetSummary;","import { CardContent, CardHeader, Typography, List, ListItem, ListSubheader } from '@mui/material';\nimport { ListItemButton, ListItemIcon, ListItemText, Checkbox } from '@mui/material';\nimport { titleCase } from '../common';\nimport { Selection } from './BudgetCalculator';\nimport BudgetSummary from './BudgetSummary';\n\n\nfunction BudgetSelections(props: {\n    items: Selection[]\n    selections: Selection[];\n    itemSelected: any;\n    budget: string;\n}) {\n\n    // create a dictionary of selections with type as key\n    const types = [ ...new Set(props.items.map(i => i.type)) ];\n    const list: { [key: string]: Selection[] } = {};\n    types.forEach(type => {\n        const selections = props.items.filter(i => i.type === type);\n        list[type] = selections;\n    });\n\n    return (\n        <>\n        <CardHeader title={`What Are You Interested In?`}>\n        </CardHeader>\n        { !props.items.length && <Typography>Loading...</Typography> }\n        { props.items.length &&\n            <CardContent sx={{ textAlign: 'left' }}>\n                <List subheader={<li />}>\n                    {Object.keys(list).map((type, i) => (\n                        <li key={i}>\n                        <ul style={{ padding: 0}}>\n                        <ListSubheader>{titleCase(type.split('_').join(' '))}</ListSubheader>\n                        {list[type].map((item, j) => (\n                            <ListItem key={`${i}-${j}`} divider>\n                                <ListItemButton\n                                    disabled={item.disabled}\n                                    role={undefined}\n                                    onClick={props.itemSelected(item)}\n                                    dense>\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge=\"start\"\n                                            checked={item.checked}\n                                            tabIndex={-1}\n                                            disableRipple\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary={item.name} secondary={`$${(item.lowPrice / 100).toLocaleString()} - $${(item.highPrice / 100).toLocaleString()}`} />\n                                </ListItemButton>\n                            </ListItem>\n                        ))}\n                        </ul>\n                        </li>\n                    ))}\n                </List>\n                <BudgetSummary budget={props.budget} selections={props.selections}></BudgetSummary>\n            </CardContent>\n        }\n        </>\n    );\n}\n\nexport default BudgetSelections;","export const titleCase = (s: string): string => {\n    return s.replace(/\\w*/g, (txt) => `${txt.charAt(0)}${txt.substr(1).toLowerCase()}`);\n}\n","import { Dialog } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\n\nfunction EasterEgg() {\n    const [/* code */, setCode] = useState<string[]>([]);\n    const [open, setOpen] = useState(false);\n    \n    useEffect(()=> {\n        const konamiCode = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];\n\n        function handleKeydown(e: KeyboardEvent) {\n            setCode((prev) => {\n                // does current code match expected code?\n                const current = e.key;\n                const expected = konamiCode[prev.length]\n\n                // if matches, add.  otherwise, reset.\n                const newCode = current === expected ? prev.concat([current]) : [];\n\n                // if complete, rick roll\n                if (newCode.join('') === konamiCode.join('')) {\n                    setOpen(true);\n                }\n\n                return newCode;\n            });\n        }\n\n        // mount\n        document.addEventListener('keydown', handleKeydown)\n\n        // unmount\n        return () => {\n            document.removeEventListener('keydown', handleKeydown)\n        }\n    }, []);\n\n    const handleClose = () => {\n        setCode([]);\n        setOpen(false);\n    }\n\n    return (\n        <>\n            <Dialog open={open} onClickCapture={handleClose}>\n                <iframe title=\"rickroll\" allow=\"fullscreen\" frameBorder=\"0\" height=\"360\" src=\"https://giphy.com/embed/uhYPkjP03h9RvVdazZ/video\" width=\"480\"></iframe>\n            </Dialog>\n        </>\n    )\n}\n\nexport default EasterEgg;","import { CardContent, CardHeader, Typography } from '@mui/material';\nimport EasterEgg from './EasterEgg';\n\nfunction BudgetSubmitted() {\n    return (\n        <>\n        <CardHeader title={'Thanks!'}>\n        </CardHeader>\n        <CardContent>\n            <Typography variant=\"body2\">Have you heard of the Konami Code?</Typography>\n        </CardContent>\n        <EasterEgg></EasterEgg>\n        </>\n    );\n}\n\nexport default BudgetSubmitted;","import { useState, useEffect } from 'react';\nimport { Card, MobileStepper, Button, useTheme } from '@mui/material';\nimport { KeyboardArrowLeft, KeyboardArrowRight } from '@mui/icons-material';\nimport firebase, { Item, BudgetSubmission } from '../features/firebase/firebase';\nimport BudgetForm from './BudgetForm';\nimport BudgetSelections from './BudgetSelections';\nimport BudgetSubmitted from './BudgetSubmitted';\n\nexport interface Selection extends Item {\n    index: number;\n    checked: boolean;\n    disabled: boolean;\n}\n\ninterface State {\n    activeStep: number;\n    items: Selection[];\n    form: {\n        budget: string;\n        selections: Selection[]\n    }\n}\n\n\nfunction BudgetCalculator() {\n    const theme = useTheme();\n\n    const [state, setState] = useState<State>({\n        activeStep: 0,\n        items: [],\n        form: {\n            budget: '',\n            selections: []\n        }\n    });\n\n\n    useEffect(() => {\n        (async () => {\n            // query the database for items\n            const items = await firebase.getItems();\n            setState((prev) => ({\n                ...prev,\n                items: items.map((item, index) => ({\n                    ...item,\n                    checked: false,\n                    disabled: false,\n                    index\n                }))\n            }));\n        })();\n    }, []);\n\n    const handleNext = () => {\n        setState((prev) => {\n            const activeStep = prev.activeStep + 1;\n            if (activeStep === 2) {\n                handleSubmit();\n            }\n            \n            return { ...prev, activeStep };\n        });\n    };\n\n    const handleBack = () => {\n        setState((prev) => ({ ...prev, activeStep: prev.activeStep - 1}));\n    };\n\n    const handleBudget = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({\n            ...state,\n            form: {\n                ...state.form,\n                budget: event.target.value\n            }\n        });\n    };\n\n    const itemSelected = (selection: Selection) => () => {\n        setState((prev) => {\n            // toggle checkbox\n            let { items } = prev;\n            items[selection.index].checked = !items[selection.index].checked;\n\n            // update selections to be the checked items\n            const selections = items.filter(i => i.checked);\n            const disabledTypes = selections.map(s => s.type);\n\n            // disable all items whose type already exists in selections BUT is not in selections\n            items = items.map(item => ({\n                ...item,\n                disabled: disabledTypes.includes(item.type) && selections.findIndex(s => s.index === item.index) === -1\n            }));\n            return {\n                ...state,\n                items,\n                form: {\n                    budget: state.form.budget,\n                    selections\n                }\n            }\n        });\n    };\n\n    const handleSubmit = () => {\n        const submission: BudgetSubmission = {\n            budget: state.form.budget,\n            items: state.form.selections.map(s => ({\n                type: s.type,\n                name: s.name,\n                lowPrice: s.lowPrice,\n                highPrice: s.highPrice\n            }))\n        }\n\n        firebase.submitBudget(submission)\n            .catch(err => console.error('Failed to submit budget!', err));\n    };\n\n    const renderFormStep = (activeStep: number) => {\n        switch (activeStep) {\n            case 0:\n                return <BudgetForm budget={state.form.budget} handleBudget={handleBudget}></BudgetForm>\n            case 1:\n                return <BudgetSelections items={state.items} selections={state.form.selections} itemSelected={itemSelected} budget={state.form.budget}></BudgetSelections>\n            case 2:\n                return <BudgetSubmitted></BudgetSubmitted>\n            default:\n                return <></>;\n        }\n    }\n\n    return (\n        <Card sx={{ margin: 'auto', width: '100%', border: 1, textAlign: 'center' }} elevation={5}>\n\n            { renderFormStep(state.activeStep) }\n\n            <MobileStepper\n                sx={{ margin: 'auto', marginTop: 3, bgcolor: 'background.paper', maxWidth: '250px' }}\n                variant=\"dots\"\n                position=\"static\"\n                steps={3}\n                activeStep={state.activeStep}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={state.activeStep === 2}>\n                        {state.activeStep > 0 ? 'Submit' : 'Next'}\n                        {theme.direction === 'rtl' ? ( <KeyboardArrowLeft /> ) : ( <KeyboardArrowRight /> )}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={state.activeStep % 2 === 0}>\n                        {theme.direction === 'rtl' ? ( <KeyboardArrowRight /> ) : ( <KeyboardArrowLeft /> )}\n                        Back\n                    </Button>\n                }\n            />\n        </Card>\n    )\n}\n\nexport default BudgetCalculator;\n","import { Container, Grid } from '@mui/material';\nimport BudgetCalculator from './components/BudgetCalculator';\n\n\n\nfunction App() {\n    return (\n        <Container maxWidth=\"xl\" sx={{ height: '100vh' }}>\n            <Grid container maxWidth=\"sm\" sx={{ justifyContent: 'center', alignItems: 'center', height: '100%', margin: 'auto' }}>\n                <Grid item xs={12} sx={{ paddingTop: 2, paddingBottom: 2}}>\n                    <BudgetCalculator></BudgetCalculator>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\nimport { grey } from '@mui/material/colors';\n\nconst theme = createTheme({\n    palette: {\n        background: {\n            default: grey[100]\n        }\n    }\n\n});\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}